// Code generated by mockery v2.43.2. DO NOT EDIT.

package httpmocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// MockAuthHandler is an autogenerated mock type for the AuthHandler type
type MockAuthHandler struct {
	mock.Mock
}

type MockAuthHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockAuthHandler) EXPECT() *MockAuthHandler_Expecter {
	return &MockAuthHandler_Expecter{mock: &_m.Mock}
}

// AuthorizePubKey provides a mock function with given fields: w, r
func (_m *MockAuthHandler) AuthorizePubKey(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// MockAuthHandler_AuthorizePubKey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AuthorizePubKey'
type MockAuthHandler_AuthorizePubKey_Call struct {
	*mock.Call
}

// AuthorizePubKey is a helper method to define mock.On call
//   - w http.ResponseWriter
//   - r *http.Request
func (_e *MockAuthHandler_Expecter) AuthorizePubKey(w interface{}, r interface{}) *MockAuthHandler_AuthorizePubKey_Call {
	return &MockAuthHandler_AuthorizePubKey_Call{Call: _e.mock.On("AuthorizePubKey", w, r)}
}

func (_c *MockAuthHandler_AuthorizePubKey_Call) Run(run func(w http.ResponseWriter, r *http.Request)) *MockAuthHandler_AuthorizePubKey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(http.ResponseWriter), args[1].(*http.Request))
	})
	return _c
}

func (_c *MockAuthHandler_AuthorizePubKey_Call) Return() *MockAuthHandler_AuthorizePubKey_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockAuthHandler_AuthorizePubKey_Call) RunAndReturn(run func(http.ResponseWriter, *http.Request)) *MockAuthHandler_AuthorizePubKey_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockAuthHandler creates a new instance of MockAuthHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockAuthHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockAuthHandler {
	mock := &MockAuthHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
